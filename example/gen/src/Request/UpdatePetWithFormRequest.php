<?php declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace OpenApi\PetStoreClient\Request;

use OpenApi\PetStoreClient\Schema\SerializableInterface;

class UpdatePetWithFormRequest implements RequestInterface
{
    /** @var int */
    private $petId;

    /** @var string|null */
    private $name;

    /** @var string|null */
    private $status;

    /** @var string */
    private $contentType = '';

    /**
     * @param int $petId
     */
    public function __construct(int $petId)
    {
        $this->petId = $petId;
    }

    /**
     * @return string
     */
    public function getContentType(): string
    {
        return $this->contentType;
    }

    /**
     * @param string $name
     *
     * @return self
     */
    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * @param string $status
     *
     * @return self
     */
    public function setStatus(string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * @return string
     */
    public function getMethod(): string
    {
        return 'POST';
    }

    /**
     * @return string
     */
    public function getRoute(): string
    {
        return \strtr('pet/{petId}', ['{petId}' => $this->petId]);
    }

    /**
     * @return array
     */
    public function getQueryParameters(): array
    {
        return \array_map(static function ($value) {
            return $value instanceof SerializableInterface ? $value->toArray() : $value;
        }, \array_filter(['name' => $this->name, 'status' => $this->status], static function ($value) {
            return null !== $value;
        }));
    }

    /**
     * @return array
     */
    public function getRawQueryParameters(): array
    {
        return ['name' => $this->name, 'status' => $this->status];
    }

    /**
     * @return array
     */
    public function getCookies(): array
    {
        return [];
    }

    /**
     * @return array
     */
    public function getHeaders(): array
    {
        return [];
    }

    public function getBody()
    {
        return null;
    }
}
